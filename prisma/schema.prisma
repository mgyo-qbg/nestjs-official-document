// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum UserGrade {
  ADMIN
  GENERAL
}

enum BookStatus {
// 도서 상태
  REQUEST_BUY // 구매요청
  DELIVERING // 배송중
  ARRIVED // 배송도착
  RENTABLE // 대여 가능
  UNRENTABLE // 대여 불가능
}

enum BookRentalLogWorkName {
// 도서 대여 관련 작업명
  CHANGE_BOOK_STATUS_TO_RENTABLE // 대여 가능 상태로 변경
  CHANGE_BOOK_STATUS_TO_UNRENTABLE // 대여 불가능 상태로 변경
}

enum BookOrderLogWorkName {
// 도서 주문 관련 작업명
  CHANGE_BOOK_STATUS_TO_REQUEST_BUY // 구매요청 상태로 변경
  CHANGE_BOOK_STATUS_TO_DELIVERING // 배송중 상태로 변경
  CHANGE_BOOK_STATUS_TO_ARRIVED // 배송도착 상태로 변경
}

enum UserWorkName {
  SIGN_UP // 회원 가입
  SIGN_IN // 회원 로그인
  DELETE_USER // 회원 탈퇴
  CHANGE_PASSWORD // 회원 비밀번호 변경
  CHANGE_USER_GRADE // 회원 등급 변경
}

enum BookCategory {
  FINANCE_AND_INVESTMENT // 금융 및 투자
  MANDATORY_READING // 필독
  INDUSTRY_AND_ECONOMY_FORECAST // 연계 산업 경제 전망
  DATA_ANALYSIS_AND_PROGRAMMING // 데이터 분석 및 프로그래밍
  BUSINESS_MANAGEMENT_STRATEGY // 기업 경영 전략
  PROFESSIONAL_SKILL_DEVELOPMENT // 업무 역량 강화
  PLANNING // 기획
  UI_UX_COMMUNICATION_COPYWRITING // UI UX 커뮤니케이션 및 카피라이팅
  CONTENT_CREATION_AND_MARKETING // 콘텐츠 제작 및 마케팅
  HUMANITIES_AND_CULTURE // 인문학 및 교양
}

model User {
  id               Int             @id @default(autoincrement()) // 회원 고유 식별자
  created_date     DateTime        @default(now()) // 데이터 생성일
  modified_date    DateTime        @updatedAt // 데이터 수정일
  is_deleted       Boolean         @default(false) // 데이터 삭제 여부
  email            String          @unique // 회원 이메일
  password         String // 회원 비밀번호
  name             String // 회원 이름
  grade            UserGrade       @default(GENERAL) // 회원 등급
  books_requested  Book[]          @relation("BookRequester") // 1:Many relation with Book
  books_borrowed   Book[]          @relation("BookBorrower") // 1:Many relation with Book
  user_logs        UserLog[]       @relation("UserWorker") // 1:Many relation with UserLog
  book_rental_logs BookRentalLog[] @relation("BookRentalWorker") // 1:Many relation with BookLog
  book_order_logs  BookOrderLog[]  @relation("BookOrderWorker") // 1:Many relation with BookLog
}

model Book {
  id               Int             @id @default(autoincrement()) // 도서 고유 식별자
  created_date     DateTime        @default(now()) // 데이터 생성일
  modified_date    DateTime        @updatedAt // 데이터 수정일
  is_deleted       Boolean         @default(false) // 데이터 삭제 여부
  isbn             String // 국제표준도서번호
  title            String // 도서 제목
  author           String // 도서 저자
  publisher        String // 도서 출판사
  cover_img        String? // 도서 커버 이미지
  book_status      BookStatus // 도서 상태
  requester        User?           @relation("BookRequester", fields: [requester_id], references: [id])
  requester_id     Int? // 도서 구매요청 회원 고유 식별자
  borrower         User?           @relation("BookBorrower", fields: [borrower_id], references: [id])
  borrower_id      Int? // 도서 대여 회원 고유 식별자
  book_rental_logs BookRentalLog[] @relation("BookRentalWhichBook") // 1:Many relation with BookLog
  book_order_logs  BookOrderLog[]  @relation("BookOrderWhichBook") // 1:Many relation with BookLog
  book_category    BookCategory // 도서 분야
}

model BookRentalLog {
  id            Int                   @id @default(autoincrement()) // 도서 관련 작업 로그 고유 식별자
  created_date  DateTime              @default(now()) // 데이터 생성일
  modified_date DateTime              @updatedAt // 데이터 수정일
  is_deleted    Boolean               @default(false) // 데이터 삭제 여부
  work_name     BookRentalLogWorkName // 도서 대여 관련 작업명
  book          Book                  @relation("BookRentalWhichBook", fields: [book_id], references: [id])
  book_id       Int // 도서 고유 식별자
  worker        User                  @relation("BookRentalWorker", fields: [worker_id], references: [id])
  worker_id     Int // 작업자(회원) 고유 식별자
}

model UserLog {
  id            Int          @id @default(autoincrement()) // 회원 관련 작업 로그 고유 식별자
  created_date  DateTime     @default(now()) // 데이터 생성일
  modified_date DateTime     @updatedAt // 데이터 수정일
  is_deleted    Boolean      @default(false) // 데이터 삭제 여부
  work_name     UserWorkName // 회원 관련 작업명
  worker        User         @relation("UserWorker", fields: [worker_id], references: [id])
  worker_id     Int // 작업자(회원) 고유 식별자
}

model BookOrderLog {
  id            Int                  @id @default(autoincrement()) // 도서 주문 로그 고유 식별자
  created_date  DateTime             @default(now()) // 데이터 생성일
  modified_date DateTime             @updatedAt // 데이터 수정일
  is_deleted    Boolean              @default(false) // 데이터 삭제 여부
  work_name     BookOrderLogWorkName // 도서 주문 관련
  book          Book                 @relation("BookOrderWhichBook", fields: [book_id], references: [id])
  book_id       Int // 도서 고유 식별자
  worker        User                 @relation("BookOrderWorker", fields: [worker_id], references: [id])
  worker_id     Int // 작업자(회원) 고유 식별자
}

model DeletedUser {
  id         Int       @id @default(autoincrement()) // 삭제된 사용자 고유 식별자
  email      String // 회원 이메일
  name       String // 회원 이름
  grade      UserGrade // 회원 등급
  deleted_at DateTime  @default(now()) // 삭제 일시(DeletedUser 테이블에 데이터가 추가된 시점)
}
